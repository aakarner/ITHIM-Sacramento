y <- matrix(c(47, 97, 123, 152, 191, 200, 76, 107, 139, 159, 201, 207))
y.star <- 1/y
u <- 1/x
X <- cbind(rep(1,nrow(u)),u)
beta <- solve(t(X)%*%X)%*%t(X)%*%y.star
beta
theta1 <- 1/beta[1]
theta1
theta2 <- beta[2]/beta[1]
theta2
length(x)
func.dg = function(theta.1, theta.2){
dg.1 = sum(sapply(1:length(x), function(i) -2*x[i]/(x[i]+theta.2)*(y[i]-theta.1*x[i]/(x[i]+theta.2))))
dg.2 = sum(sapply(1:length(x), function(i) 2*theta.1*x[i]/((x[i]+theta.2)^2)*(y[i]-theta.1*x[i]/(x[i]+theta.2))))
as.matrix(c(dg.1,dg.2))
}
func.dg = function(theta.1, theta.2){
dg.1 = sum(sapply(1:length(x), function(i) -2*x[i]/(x[i]+theta.2)*(y[i]-theta.1*x[i]/(x[i]+theta.2))))
dg.2 = sum(sapply(1:length(x), function(i) 2*theta.1*x[i]/((x[i]+theta.2)^2)*(y[i]-theta.1*x[i]/(x[i]+theta.2))))
matrix(c(dg.1,dg.2))
}
func.ddg = function(theta.1, theta.2){
ddg.11 = sum(sapply(1:length(x), function(i) 2*(x[i]^2)/((x[i]+theta.2)^2)))
ddg.12 = sum(sapply(1:length(x), function(i) 2*x[i]*y[i]/((x[i]+theta.2)^2)-4*theta.1*(x[i])^2/((x[i]+theta.2)^3)))
ddg.22 = sum(sapply(1:length(x), function(i) -4*theta.1*x[i]*y[i]/((x[i]+theta.2)^3)+6*(theta.1^2)*(x[i]^2)/((x[i]+theta.2)^4)))
matrix(c(ddg.11,ddg.12,ddg.12,ddg.22),2,2)
}
x <- matrix(rep(c(0.02, 0.06, 0.11, 0.22, 0.56, 1.10),2))
y <- matrix(c(47, 97, 123, 152, 191, 200, 76, 107, 139, 159, 201, 207))
y.star <- 1/y
u <- 1/x
X <- cbind(rep(1,nrow(u)),u)
beta <- solve(t(X)%*%X)%*%t(X)%*%y.star
beta
theta.1 <- 1/beta[1]
theta.1
theta.2 <- beta[2]/beta[1]
theta.2
func.dg = function(theta.1, theta.2){
dg.1 = sum(sapply(1:length(x), function(i) -2*x[i]/(x[i]+theta.2)*(y[i]-theta.1*x[i]/(x[i]+theta.2))))
dg.2 = sum(sapply(1:length(x), function(i) 2*theta.1*x[i]/((x[i]+theta.2)^2)*(y[i]-theta.1*x[i]/(x[i]+theta.2))))
matrix(c(dg.1,dg.2))
}
func.ddg = function(theta.1, theta.2){
ddg.11 = sum(sapply(1:length(x), function(i) 2*(x[i]^2)/((x[i]+theta.2)^2)))
ddg.12 = sum(sapply(1:length(x), function(i) 2*x[i]*y[i]/((x[i]+theta.2)^2)-4*theta.1*(x[i])^2/((x[i]+theta.2)^3)))
ddg.22 = sum(sapply(1:length(x), function(i) -4*theta.1*x[i]*y[i]/((x[i]+theta.2)^3)+6*(theta.1^2)*(x[i]^2)/((x[i]+theta.2)^4)))
matrix(c(ddg.11,ddg.12,ddg.12,ddg.22),2,2)
}
newton.raphson = function(tol=1E-12,theta.1, theta.2){
i = 1;
theta.11 = theta.1
theta.21 = theta.2
theta.v1 = as.matrix(c(theta.11,theta.21))
theta.v0 = as.matrix(c(theta.1, theta.2))
p = matrix(rep(0,200),2,100)
while(i < 100) {
theta.v1 = (theta.v0 - solve(func.ddg(theta.v0[1,], theta.v0[2,]))%*%func.dg(theta.v0[1,],theta.v0[2,]))
p[,i] = theta.v1
i = i+1
if (t(theta.v1-theta.v0)%*%(theta.v1-theta.v0)/sqrt(t(theta.v0)%*%theta.v0) < tol) break
theta.v0 = theta.v1
}
return(p[,1:i-1])
}
result = newton.raphson(theta.1 = theta.1,theta.2 = theta.2)
result[,ncol(result)]
theta.a = matrix(c(theta.1, theta.2))
steepest.descent = function(theta.v0){
alpha = 1
theta.v1 = theta.v0 - alpha*func.dg(theta.v0[1,],theta.v0[2,])
while(t(theta.v1-theta.v0)%*%(theta.v1-theta.v0)/sqrt(t(theta.v0)%*%theta.v0) > 1E-8) {
d = sum((y-theta.v0[1,]*x/(x+theta.v0[2,]))^2-(y-theta.v1[1,]*x/(x+theta.v1[2,]))^2)
if(d < 0){
alpha = alpha/2
theta.v1 = theta.v0 - alpha*func.dg(theta.v0[1,],theta.v0[2,])
}
if(d > 0){
alpha = 1
theta.v0 = theta.v1
theta.v1 = theta.v0 - alpha*func.dg(theta.v0[1,],theta.v0[2,])
}
}
return(theta.v1)
}
theta.a = matrix(c(theta.1, theta.2))
steepest.descent(theta.a)
A = function(a){
A1 = sapply(1:12, function(i) x[i]/(x[i]+a[2,]))
A2 = sapply(1:12, function(i) -a[1,]*x[i]/(x[i]+a[2,])^2)
A = matrix(cbind(A1,A2))
return(A)
}
Z = function(z){
Z =sapply(1:12, function(i) y[i]-z[1,]*x[i]/(x[i]+z[2,]))
return(matrix(Z))
}
gauss.newton = function(x0){
x1 = x0 + solve(t(A(x0))%*%A(x0))%*%t(A(x0))%*%Z(x0)
while(t(x1-x0)%*%(x1-x0)/sqrt(t(x0)%*%x0) > 1E-8){
x0 = x1
x1 = x0 + solve(t(A(x0))%*%A(x0))%*%t(A(x0))%*%Z(x0)
}
return(x1)
}
gauss.newton(theta.a)
theta.a = matrix(c(theta.1, theta.2))
A = function(a){
A1 = sapply(1:12, function(i) x[i]/(x[i]+a[2,]))
A2 = sapply(1:12, function(i) -a[1,]*x[i]/(x[i]+a[2,])^2)
A = as.matrix(cbind(A1,A2))
return(A)
}
Z = function(z){
Z =sapply(1:12, function(i) y[i]-z[1,]*x[i]/(x[i]+z[2,]))
return(as.matrix(Z))
}
gauss.newton = function(x0){
x1 = x0 + solve(t(A(x0))%*%A(x0))%*%t(A(x0))%*%Z(x0)
while(t(x1-x0)%*%(x1-x0)/sqrt(t(x0)%*%x0) > 1E-8){
x0 = x1
x1 = x0 + solve(t(A(x0))%*%A(x0))%*%t(A(x0))%*%Z(x0)
}
return(x1)
}
gauss.newton(theta.a)
steepest.descent(theta.a)
gauss.newton(theta.a)
dat<-read.dbf('/Users/Yizheng/Downloads/trip_2012.dbf')
library(foreign)
dat<-read.dbf('/Users/Yizheng/Downloads/trip_2012.dbf')
head(dat)
dat[,which(SAMPN==1)]
dat[which(SAMPN==1)]
dat[which(SAMPN==1)]
dat[which(SAMPN==1),]
names(dat)
dat[which("SAMPN"==1)]
dat[,which("SAMPN"==1)]
dat[,which("SAMPN"=="1")]
dat[,which("OTAZ"==1240)]
dat[,which(dat$SAMPN==1)]
dat[which(dat$SAMPN==1)]
table(dat$SAMPN)
dat[dat$SAMPN==1]
which(dat$SAMPN==1)
dat[which(dat$SAMPN==1),]
dat[which(dat$SAMPN==2),]
dat[which(dat$SAMPN==3),]
dat[8589970:8589975,]
integrated.shiny.app(countyID = 7, barID = 1,outcomeID = 1,demogrID = 1, yaxisID = 5)
setwd("~/Documents/02_Work/14_GitHub/00_ITHIM/00_R scripts")
source('EquityAnalysis_ITHIM_PA.R')
setwd("~/Documents/02_Work/14_GitHub/00_ITHIM/00_R scripts")
source('EquityAnalysis_ITHIM_Injuries_TwoRaces.R')
integrated.shiny.app <- function(countyID,barID,outcomeID,demogrID,yaxisID){
if (outcomeID == 1){
if (yaxisID == 1){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 1,demogrID = demogrID,barID = 1)
}else if (yaxisID==2){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 2,demogrID = demogrID,barID = 1)
}else if (yaxisID==3){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 1,demogrID = demogrID,barID = 1)
}else if (yaxisID==4){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 2,demogrID = demogrID,barID = 1)
}else if (yaxisID==5){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 3,demogrID = demogrID,barID = 1)
}else{
message('wrong input')
}
}else if (outcomeID==2){
if (yaxisID%in%c(1:4)){
plot.shiny.app.injury(countyID = countyID,barID = 1,yaxisID = yaxisID)
}else{
message('wrong input')
}
}else if (outcomeID==3){
if (countyID%in%(1:6)){
value <- NULL
if (yaxisID==1){ #total deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+1*9-26):(1*18+1*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==2){ #total DALYs
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total DALYs')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==3){ # age.std deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==4){#age.std dalys
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total DALYs')
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('DALYs reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}
}else{
message('wrong input')
}
}
}
integrated.shiny.app(countyID = 7, barID = 1,outcomeID = 1,demogrID = 1, yaxisID = 5)
integrated.shiny.app(countyID = 1, barID = 1,outcomeID = 1,demogrID = 1, yaxisID = 5)
integrated.shiny.app(countyID = 1, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 5)
integrated.shiny.app(countyID = 1, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 1, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 2)
integrated.shiny.app(countyID = 1, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 3)
integrated.shiny.app(countyID = 1, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 4)
integrated.shiny.app(countyID = 2, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 4)
integrated.shiny.app(countyID = 7, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 4)
integrated.shiny.app(countyID = 7, barID = 1,outcomeID = 2,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 2,outcomeID = 2,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 3,outcomeID = 2,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 2,outcomeID = 2,demogrID = 1, yaxisID = 1)
plot.shiny.app.injury(countyID = 2, barID = 1,yaxisID = 1)
plot.shiny.app.injury(countyID = 2, barID = 2,yaxisID = 1)
integrated.shiny.app <- function(countyID,barID,outcomeID,demogrID,yaxisID){
if (outcomeID == 1){
if (yaxisID == 1){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 1,demogrID = demogrID,barID = 1)
}else if (yaxisID==2){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 2,demogrID = demogrID,barID = 1)
}else if (yaxisID==3){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 1,demogrID = demogrID,barID = 1)
}else if (yaxisID==4){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 2,demogrID = demogrID,barID = 1)
}else if (yaxisID==5){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 3,demogrID = demogrID,barID = 1)
}else{
message('wrong input')
}
}else if (outcomeID==2){
if (yaxisID%in%c(1:4)){
plot.shiny.app.injury(countyID = countyID,barID = barID,yaxisID = yaxisID)
}else{
message('wrong input')
}
}else if (outcomeID==3){
if (countyID%in%(1:6)){
value <- NULL
if (yaxisID==1){ #total deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+1*9-26):(1*18+1*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==2){ #total DALYs
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total DALYs')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==3){ # age.std deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==4){#age.std dalys
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total DALYs')
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('DALYs reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}
}else{
message('wrong input')
}
}
}
integrated.shiny.app(countyID = 7, barID = 2,outcomeID = 2,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 3,outcomeID = 2,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 4,outcomeID = 2,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 4,outcomeID = 1,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 2,outcomeID = 1,demogrID = 1, yaxisID = 1)
integrated.shiny.app <- function(countyID,barID,outcomeID,demogrID,yaxisID){
if (outcomeID == 1){
if (yaxisID == 1){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 1,demogrID = demogrID,barID = barID)
}else if (yaxisID==2){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 2,demogrID = demogrID,barID = barID)
}else if (yaxisID==3){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 1,demogrID = demogrID,barID = barID)
}else if (yaxisID==4){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 2,demogrID = demogrID,barID = barID)
}else if (yaxisID==5){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 3,demogrID = demogrID,barID = barID)
}else{
message('wrong input')
}
}else if (outcomeID==2){
if (yaxisID%in%c(1:4)){
plot.shiny.app.injury(countyID = countyID,barID = barID,yaxisID = yaxisID)
}else{
message('wrong input')
}
}else if (outcomeID==3){
if (countyID%in%(1:6)){
value <- NULL
if (yaxisID==1){ #total deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+1*9-26):(1*18+1*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==2){ #total DALYs
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total DALYs')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==3){ # age.std deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==4){#age.std dalys
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total DALYs')
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('DALYs reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}
}else{
message('wrong input')
}
}
}
integrated.shiny.app(countyID = 7, barID = 2,outcomeID = 1,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 3,outcomeID = 1,demogrID = 1, yaxisID = 1)
integrated.shiny.app(countyID = 7, barID = 3,outcomeID = 1,demogrID = 2, yaxisID = 1)
integrated.shiny.app(countyID = 1, barID = 1,outcomeID = 3,demogrID = 1, yaxisID = 1)
