df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a.physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'b.traffic injury'
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
df.result.integration.temp$type <- 'c. both'
df.result.integration <- rbind(df.result.PA.aggr,df.result.injury,df.result.integration.temp)
plot.title <- paste0(countyNames[countyID],': Reduction in Total Deaths')
# ggplot(data = df.result.integration,mapping = aes(x = factor(DemogrGroup), y = V1,color = factor(Scenario),shape = factor(type)))+
#    geom_point(stat = 'identity',size=3,position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
#    ggtitle(plot.title)
#
# ggplot(data = df.result.integration,mapping = aes(x = factor(DemogrGroup), y = V1,color = factor(Scenario),shape = factor(type)))+
#   geom_point(stat = 'identity',size=3,position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
#   ggtitle(plot.title)
# ggplot(data = df.result.integration,mapping = aes(x = factor(DemogrGroup), y = V1,color = factor(Scenario)))+
#   geom_dotplot(binaxis = "y",position = 'dodge',binwidth = 0.1)+xlab('Demographic Group')+ylab('Total Death Reduction')+
#   ggtitle(plot.title)
ggplot(data = df.result.integration, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',position = position_dodge(0.5),width = 0.5)+xlab('Demographic Group')+ylab('Total Death Reduction')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==3){ #total DALYs
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a. physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.DALYs
df.result.injury$type <- 'b. traffic injury'
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
df.result.integration.temp$type <- 'c. both'
df.result.integration <- rbind(df.result.PA.aggr,df.result.injury,df.result.integration.temp)
plot.title <- paste0(countyNames[countyID],': Reduction in Total DALYs')
ggplot(data = df.result.integration, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==2){ # age.std deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+1*9-26):(1*18+1*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a. physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'b. traffic injury'
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
df.result.integration.temp$type <- 'c. both'
df.result.integration <- rbind(df.result.PA.aggr,df.result.injury,df.result.integration.temp)
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total Deaths')
ggplot(data = df.result.integration, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death reduction rate (per 100,000 population)')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==4){#age.std dalys
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a. physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.DALYs
df.result.injury$type <- 'b. traffic injury'
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total DALYs')
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
df.result.integration.temp$type <- 'c. both'
df.result.integration <- rbind(df.result.PA.aggr,df.result.injury,df.result.integration.temp)
ggplot(data = df.result.integration, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('DALYs reduction rate (per 100,000 population)')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}
}else if(countyID==7){ #region wide
#test
#yaxisID=1
#barID=1
df.region <- NULL
if (yaxisID==1){ #death total
for (countyID in c(1:6)){
value <- NULL
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+1*9-26):(1*18+1*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a. physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'b. traffic injury'
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
#df.result.integration.temp$type <- 'integration'
#df.result.integration <- rbind(df.result.PA.aggr,df.result.injury,df.result.integration.temp)
df.region <- rbind(df.region,df.result.integration.temp)
}
df.region$county <- rep(countyNames,each = 6)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_wrap(~county,scales = "free") +ggtitle("Region-Wide: Reduction of Total Deaths ")
#return(df.region = df.region)
}else if (yaxisID==2){#death age.std
for (countyID in c(1:6)){
value <- NULL
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a. physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'b. traffic injury'
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
#df.result.integration.temp$type <- 'integration'
df.region <- rbind(df.region,df.result.integration.temp)
}
df.region$county <- rep(countyNames,each = 6)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death reduction rate (per 100,000 population)')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_wrap(~county,scales = "free") +ggtitle("Region-Wide: Age-Standardized Reduction in Total Deaths")
#return(df.region = df.region)
}else if (yaxisID==3){# total DALYs
for(countyID in 1:6){
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a. physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.DALYs
df.result.injury$type <- 'b. traffic injury'
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
#df.result.integration.temp$type <- 'integration'
df.region <- rbind(df.region,df.result.integration.temp)
}
df.region$county <- rep(countyNames,each = 6)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_wrap(~county,scales = "free") +ggtitle("Region-Wide: Reduction of Total DALYs ")
#return(df.region = df.region)
}else if (yaxisID==4){#age.std DALYs
for (countyID in 1:6){
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'a. physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.DALYs
df.result.injury$type <- 'b. traffic injury'
#plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total DALYs')
df.result.integration.temp <- df.result.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.result.PA.aggr$V1+df.result.injury$V1
df.region <- rbind(df.region,df.result.integration.temp)
}
df.region$county <- rep(countyNames,each = 6)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('DALYs reduction rate (per 100,000 population)')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_wrap(~county,scales = "free") +ggtitle("Region-Wide: Age-Standardized Reduction in Total DALYs")
#return(df.region = df.region)
}else{
message('wrong input')
}
}
}
}
aggr.outcome.shiny.app <- function(barID,yaxisID){
#TEST
#barID =1
#yaxisID=1
#demogr.name <- c('white','others')
if(barID==1){
scenario.name.sep <- c('2020','2027','2036')
scenairo.name<-rep(scenario.name.sep,6)
}else if(barID==2){
scenario.name.sep <- c('S1','S2','S3')
scenairo.name<-rep(scenario.name.sep,6)
}
if (yaxisID==1){#death total
# PA module
value<-NULL
PA.disaggr <- DFforRegionWide(ReductionOutcome = RawReductionOutcome,demogrID = 1,dbID = 1,barID = barID)
PA.disaggr.white <- PA.disaggr[seq(from=1,to=69,by=4),]
for (i in 1:3){
value[i] <-sum(PA.disaggr.white[c(i,i+3,i+6,i+9,i+12,i+15),3])
}
PA.disaggr.white.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '1. white',V1=value)
value<-value.temp<-NULL
for (i in 1:18){
#value[i]<-sum(PA.disaggr[(4*i-3):(4*i),3])
value[i] <- sum(PA.disaggr[(4*i-2):(4*i),3])
}
for (j in 1:3){
value.temp[j]<-sum(value[c(j,j+3,j+6,j+9,j+12,j+15)])
}
PA.disaggr.other.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '2. other',V1=value.temp)
df.PA.aggr <- rbind(PA.disaggr.white.temp,PA.disaggr.other.temp)
df.PA.aggr <- df.PA.aggr[order(df.PA.aggr$Scenario),]
df.PA.aggr$type <- 'a. physical activity'
#df.PA.aggr.temp <- data.frame(Scenario = scenairo.name,county = rep(countyNames,each=3),V1=value,type='physical activity')
# value <- NULL
# for (i in 1:3){
#   value[i]<-sum(df.PA.aggr.temp[c(i,i+3,i+6,i+9,i+12,i+15),3])
# }
#
# df.PA.aggr <- data.frame(Scenario = scenario.name.sep,type = 'a. physical activity',V1=value)
####injury module
df.injury.region <- NULL
for (i in 1:6){ #county
#value <-NULL
df.temp <- DFforFigure.injury(barID = barID,i,typeID = 1)
#for (j in 1:3){
# value[j] <- sum(df.temp$df.fatality[(2*j-1):(2*j),3])
#}
df.injury.aggr.temp <- df.temp$df.fatality
df.injury.region <- rbind(df.injury.region,df.injury.aggr.temp)
}
df.injury.region<-data.frame(df.injury.region,county = rep(countyNames,each=6))
#df.injury.region<-data.frame(Scenario = scenairo.name,df.injury.region)
value <- NULL
for (i in 1:6){
value[i]<-sum(df.injury.region[c(i,i+6,i+12,i+18,i+24,i+30),3])
}
df.injury.aggr <- data.frame(Scenario = rep(scenario.name.sep,each = 2),DemogrGroup = rep(c('1. white','2. other'),3),V1=value, type = 'b. traffic injury')
# sum of two module
df.result.integration.temp <- df.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.PA.aggr$V1+df.injury.aggr$V1
df.result.integration.temp$type <- 'c. both'
df.integration.aggr <- rbind(df.PA.aggr,df.injury.aggr,df.result.integration.temp)
ggplot(data = df.integration.aggr, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demograhic Group')+ylab('Total Deaths Reduction')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle("Region-Wide: Reduction in Total Deaths")
}else if (yaxisID==2){#death age.std
# PA module
value<-NULL
PA.disaggr <- DFforRegionWide(ReductionOutcome = AgeStdReductionOutcome,demogrID = 1,dbID = 1,barID = barID)
PA.disaggr.white <- PA.disaggr[seq(from=1,to=69,by=4),]
for (i in 1:3){
value[i] <-sum(PA.disaggr.white[c(i,i+3,i+6,i+9,i+12,i+15),3])
}
PA.disaggr.white.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '1. white',V1=value)
value<-value.temp<-NULL
for (i in 1:18){
#value[i]<-sum(PA.disaggr[(4*i-3):(4*i),3])
value[i] <- sum(PA.disaggr[(4*i-2):(4*i),3])
}
for (j in 1:3){
value.temp[j]<-sum(value[c(j,j+3,j+6,j+9,j+12,j+15)])
}
PA.disaggr.other.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '2. other',V1=value.temp)
df.PA.aggr <- rbind(PA.disaggr.white.temp,PA.disaggr.other.temp)
df.PA.aggr <- df.PA.aggr[order(df.PA.aggr$Scenario),]
df.PA.aggr$type <- 'a. physical activity'
#df.PA.aggr.temp <- data.frame(Scenario = scenairo.name,county = rep(countyNames,each=3),V1=value,type='physical activity')
# value <- NULL
# for (i in 1:3){
#   value[i]<-sum(df.PA.aggr.temp[c(i,i+3,i+6,i+9,i+12,i+15),3])
# }
#
# df.PA.aggr <- data.frame(Scenario = scenario.name.sep,type = 'a. physical activity',V1=value)
####injury module
df.injury.region <- NULL
for (i in 1:6){ #county
#value <-NULL
df.temp <- DFforFigure.injury(barID = barID,i,typeID = 2)
#for (j in 1:3){
# value[j] <- sum(df.temp$df.fatality[(2*j-1):(2*j),3])
#}
df.injury.aggr.temp <- df.temp$df.fatality
df.injury.region <- rbind(df.injury.region,df.injury.aggr.temp)
}
df.injury.region<-data.frame(df.injury.region,county = rep(countyNames,each=6))
#df.injury.region<-data.frame(Scenario = scenairo.name,df.injury.region)
value <- NULL
for (i in 1:6){
value[i]<-sum(df.injury.region[c(i,i+6,i+12,i+18,i+24,i+30),3])
}
df.injury.aggr <- data.frame(Scenario = rep(scenario.name.sep,each = 2),DemogrGroup = rep(c('1. white','2. other'),3),V1=value, type = 'b. traffic injury')
# sum of two module
df.result.integration.temp <- df.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.PA.aggr$V1+df.injury.aggr$V1
df.result.integration.temp$type <- 'c. both'
df.integration.aggr <- rbind(df.PA.aggr,df.injury.aggr,df.result.integration.temp)
ggplot(data = df.integration.aggr, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demograhic Group')+ylab('Deaths reduction rate (per 100,000 population)')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle("Region-Wide: Age-Standardized Reduction in Total Deaths")
}else if(yaxisID==3){# DALYs total
# PA module
value<-NULL
PA.disaggr <- DFforRegionWide(ReductionOutcome = RawReductionOutcome,demogrID = 1,dbID = 2,barID = barID)
PA.disaggr.white <- PA.disaggr[seq(from=1,to=69,by=4),]
for (i in 1:3){
value[i] <-sum(PA.disaggr.white[c(i,i+3,i+6,i+9,i+12,i+15),3])
}
PA.disaggr.white.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '1. white',V1=value)
value<-value.temp<-NULL
for (i in 1:18){
#value[i]<-sum(PA.disaggr[(4*i-3):(4*i),3])
value[i] <- sum(PA.disaggr[(4*i-2):(4*i),3])
}
for (j in 1:3){
value.temp[j]<-sum(value[c(j,j+3,j+6,j+9,j+12,j+15)])
}
PA.disaggr.other.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '2. other',V1=value.temp)
df.PA.aggr <- rbind(PA.disaggr.white.temp,PA.disaggr.other.temp)
df.PA.aggr <- df.PA.aggr[order(df.PA.aggr$Scenario),]
df.PA.aggr$type <- 'a. physical activity'
#df.PA.aggr.temp <- data.frame(Scenario = scenairo.name,county = rep(countyNames,each=3),V1=value,type='physical activity')
# value <- NULL
# for (i in 1:3){
#   value[i]<-sum(df.PA.aggr.temp[c(i,i+3,i+6,i+9,i+12,i+15),3])
# }
#
# df.PA.aggr <- data.frame(Scenario = scenario.name.sep,type = 'a. physical activity',V1=value)
####injury module
df.injury.region <- NULL
for (i in 1:6){ #county
#value <-NULL
df.temp <- DFforFigure.injury(barID = barID,i,typeID = 1)
#for (j in 1:3){
# value[j] <- sum(df.temp$df.fatality[(2*j-1):(2*j),3])
#}
df.injury.aggr.temp <- df.temp$df.DALYs
df.injury.region <- rbind(df.injury.region,df.injury.aggr.temp)
}
df.injury.region<-data.frame(df.injury.region,county = rep(countyNames,each=6))
#df.injury.region<-data.frame(Scenario = scenairo.name,df.injury.region)
value <- NULL
for (i in 1:6){
value[i]<-sum(df.injury.region[c(i,i+6,i+12,i+18,i+24,i+30),3])
}
df.injury.aggr <- data.frame(Scenario = rep(scenario.name.sep,each = 2),DemogrGroup = rep(c('1. white','2. other'),3),V1=value, type = 'b. traffic injury')
# sum of two module
df.result.integration.temp <- df.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.PA.aggr$V1+df.injury.aggr$V1
df.result.integration.temp$type <- 'c. both'
df.integration.aggr <- rbind(df.PA.aggr,df.injury.aggr,df.result.integration.temp)
ggplot(data = df.integration.aggr, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle("Region-Wide: Reduction in Total DALYs")
}else if (yaxisID==4){#DALYs age.std
# PA module
value<-NULL
PA.disaggr <- DFforRegionWide(ReductionOutcome = AgeStdReductionOutcome,demogrID = 1,dbID = 2,barID = barID)
PA.disaggr.white <- PA.disaggr[seq(from=1,to=69,by=4),]
for (i in 1:3){
value[i] <-sum(PA.disaggr.white[c(i,i+3,i+6,i+9,i+12,i+15),3])
}
PA.disaggr.white.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '1. white',V1=value)
value<-value.temp<-NULL
for (i in 1:18){
#value[i]<-sum(PA.disaggr[(4*i-3):(4*i),3])
value[i] <- sum(PA.disaggr[(4*i-2):(4*i),3])
}
for (j in 1:3){
value.temp[j]<-sum(value[c(j,j+3,j+6,j+9,j+12,j+15)])
}
PA.disaggr.other.temp <- data.frame(Scenario = scenario.name.sep,DemogrGroup = '2. other',V1=value.temp)
df.PA.aggr <- rbind(PA.disaggr.white.temp,PA.disaggr.other.temp)
df.PA.aggr <- df.PA.aggr[order(df.PA.aggr$Scenario),]
df.PA.aggr$type <- 'a. physical activity'
#df.PA.aggr.temp <- data.frame(Scenario = scenairo.name,county = rep(countyNames,each=3),V1=value,type='physical activity')
# value <- NULL
# for (i in 1:3){
#   value[i]<-sum(df.PA.aggr.temp[c(i,i+3,i+6,i+9,i+12,i+15),3])
# }
#
# df.PA.aggr <- data.frame(Scenario = scenario.name.sep,type = 'a. physical activity',V1=value)
####injury module
df.injury.region <- NULL
for (i in 1:6){ #county
#value <-NULL
df.temp <- DFforFigure.injury(barID = barID,i,typeID = 2)
#for (j in 1:3){
# value[j] <- sum(df.temp$df.fatality[(2*j-1):(2*j),3])
#}
df.injury.aggr.temp <- df.temp$df.DALYs
df.injury.region <- rbind(df.injury.region,df.injury.aggr.temp)
}
df.injury.region<-data.frame(df.injury.region,county = rep(countyNames,each=6))
#df.injury.region<-data.frame(Scenario = scenairo.name,df.injury.region)
value <- NULL
for (i in 1:6){
value[i]<-sum(df.injury.region[c(i,i+6,i+12,i+18,i+24,i+30),3])
}
df.injury.aggr <- data.frame(Scenario = rep(scenario.name.sep,each = 2),DemogrGroup = rep(c('1. white','2. other'),3),V1=value, type = 'b. traffic injury')
# sum of two module
df.result.integration.temp <- df.PA.aggr[,1:2]
df.result.integration.temp$V1 <- df.PA.aggr$V1+df.injury.aggr$V1
df.result.integration.temp$type <- 'c. both'
df.integration.aggr <- rbind(df.PA.aggr,df.injury.aggr,df.result.integration.temp)
ggplot(data = df.integration.aggr, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Groups')+ylab('DALYs reduction rate (per 100,000 population)')+
geom_text(aes(label=round(V1,1)),color="black",size=3.5,vjust=-0.5,position = position_dodge(0.5))+
facet_grid(.~type,scales = "free")+ggtitle("Region-Wide: Age-Standardized Reduction in Total DALYs")
}else{
message('wrong input')
}
}
integrated.shiny.app(countyID = 2, barID = 3,outcomeID = 2,demogrID = 1, yaxisID =1)
aggr.outcome.shiny.app(barID = 1,yaxisID=1)
aggr.outcome.shiny.app(barID = 1,yaxisID=2)
PersonVehicleDist.C1 <- read.csv('06_PersonVehicleDistance/07_PersonVehicleDistance_Custom1.csv')
input.csv <- function(countyID,scenarioID){
#scenarioID: 0-2012,1-2020,2-2036,3-2027,4-S1,5-S2,6-S3,7-C1,8-C2,9-C3
#countyID: 1-ELD,2-PLA,3-SAC,4-SUT,5-YOL,6-YUB
#test
#countyID = 2
#scenarioID = 7
#pop.file.names <- list.files(path = "01_Population")
#filenames.injury <- readLines("05_baseline injury/01_filenames_twoRaces.txt")
#temp.Other <- read.csv(filenames.injury[2*countyID])
filenames.injury <- list.files(path = '05_baseline injury')[1:6]
# build a list to store the baseline injury data sets for all races
injury.list <- rep(list(matrix(NA,36,7)),2)
temp <- read.csv(paste0('05_baseline injury/',filenames.injury[countyID]))
injury.list[[1]] <- temp[1:36,2:8] # non hispanic white
injury.list[[2]] <- temp[38:73,2:8] # other three races
names(injury.list)<- c('NHW','Others')
# input the person & vehicle distance matrix
# include the distance distribution for three road types and occupancy for each traffic mode
# filenames.vmt <- readLines("06_PersonVehicleDistance/by county/01_filenames_twoRaces.txt")
#
# person.vehicle.distance_input <- read.csv(filenames.vmt[countyID])
# person.vehicle.distance_input.list <- rep(list(matrix(NA,34,1)),2)
# for (i in 1:2){
#   person.vehicle.distance_input.list[[i]]<-person.vehicle.distance_input[1:34,(6*i-3):(6*i+1)]
# }
# names(person.vehicle.distance_input.list)<- c('NHW','Others')
person.vehicle.distance_input.matrix <- matrix(NA,34,2)
if (scenarioID<=6){
filenames.dist <- list.files(path='06_PersonVehicleDistance')
person.vehicle.distance_input <- read.csv(paste0('06_PersonVehicleDistance/',filenames.dist[scenarioID+1]))
}else if (scenarioID==7){
person.vehicle.distance_input <- PersonVehicleDist.C1
}else if (scenarioID==8){
person.vehicle.distance_input <- PersonVehicleDist.C2
}else if(scenarioID==9){
person.vehicle.distance_input <- PersonVehicleDist.C3
}
colnames(person.vehicle.distance_input.matrix)<- c('NHW','Others')
#NHW
person.vehicle.distance_input.matrix[,1]<-person.vehicle.distance_input[1:34,(4*countyID-1)]
#Other three races
person.vehicle.distance_input.matrix[,2]<-person.vehicle.distance_input[1:34,(4*countyID+1)]
#GBD
GBD.local.white <-GBD.injury[,2:5]*matrix(cbind(Pop.file.twoRaces[(9*countyID-8):(9*countyID-1),1],Pop.file.twoRaces[(9*countyID-8):(9*countyID-1),2]),16,1)/US.pop
GBD.local.Other <-GBD.injury[,2:5]*matrix(cbind(Pop.file.twoRaces[(9*countyID-8):(9*countyID-1),3],Pop.file.twoRaces[(9*countyID-8):(9*countyID-1),4]),16,1)/US.pop
return(list(
injury.list=injury.list,
person.vehicle.distance_input.matrix=person.vehicle.distance_input.matrix,
GBD.local.white = GBD.local.white,
GBD.local.Other = GBD.local.Other
))
}
integrated.shiny.app(countyID = 2, barID = 3,outcomeID = 2,demogrID = 1, yaxisID =1)
integrated.shiny.app(countyID = 2, barID = 1,outcomeID = 2,demogrID = 1, yaxisID =1)
integrated.shiny.app(countyID = 2, barID = 2,outcomeID = 2,demogrID = 1, yaxisID =1)
integrated.shiny.app(countyID = 2, barID = 3,outcomeID = 2,demogrID = 1, yaxisID =1)
runApp()
runApp()
runApp()
