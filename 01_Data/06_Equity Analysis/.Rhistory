HealthOutcome <- output.HealthOutcome(i)
All.InputPara <- read.csv.files(i)
temp.race.2020 <- computeAgeStdOutput(All.InputPara$InputPara_byRace,HealthOutcome$HealthOutcome_byRace.2020)
temp.income.2020 <- computeAgeStdOutput(All.InputPara$InputPara_byIncome,HealthOutcome$HealthOutcome_byIncome.2020)
temp.race.2036 <- computeAgeStdOutput(All.InputPara$InputPara_byRace,HealthOutcome$HealthOutcome_byRace.2036)
temp.income.2036 <- computeAgeStdOutput(All.InputPara$InputPara_byIncome,HealthOutcome$HealthOutcome_byIncome.2036)
AgeStdDeath.matrix.race.2020[j,] <- temp.race.2020$age.std.death
AgeStdDeath.matrix.race.2036[j,] <- temp.race.2036$age.std.death
AgeStdDeath.matrix.income.2020[j,] <- temp.income.2020$age.std.death
AgeStdDeath.matrix.income.2036[j,] <- temp.income.2036$age.std.death
AgeStdDALYs.matrix.race.2020[j,] <- temp.race.2020$age.std.DALYs
AgeStdDALYs.matrix.race.2036[j,] <- temp.race.2036$age.std.DALYs
AgeStdDALYs.matrix.income.2020[j,] <- temp.income.2020$age.std.DALYs
AgeStdDALYs.matrix.income.2036[j,] <- temp.income.2036$age.std.DALYs
j=j+1
}
return(list(
AgeStdDeath.matrix.race.2020=AgeStdDeath.matrix.race.2020,
AgeStdDeath.matrix.race.2036=AgeStdDeath.matrix.race.2036,
AgeStdDALYs.matrix.race.2020=AgeStdDALYs.matrix.race.2020,
AgeStdDALYs.matrix.race.2036=AgeStdDALYs.matrix.race.2036,
AgeStdDeath.matrix.income.2020=AgeStdDeath.matrix.income.2020,
AgeStdDeath.matrix.income.2036=AgeStdDeath.matrix.income.2036,
AgeStdDALYs.matrix.income.2020=AgeStdDALYs.matrix.income.2020,
AgeStdDALYs.matrix.income.2036=AgeStdDALYs.matrix.income.2036
))
}
DFforFigure <- function(OutcomeMatrix.list,demogrID,countyID){
#test
# demogrID = 1
# countyID = 1
# dbID = 1
# OutcomeMatrix.list <- RawReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))]
OutcomeMatrix.Scenario.2020 <- OutcomeMatrix.list[[1]]
OutcomeMatrix.Scenario.2036 <- OutcomeMatrix.list[[2]]
OutcomeMatrix <- rbind(OutcomeMatrix.Scenario.2020[countyID,],OutcomeMatrix.Scenario.2036[countyID,])
scenario.name <- rep(c('2020','2036'),each=4)
#county names
#county <- rep(rownames(OutcomeMatrix),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),2)
#income group names
incomeGroup <- rep(incomeGroupNames,2)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome <- outcome.update<-as.data.frame(matrix(t(OutcomeMatrix),nDemoClass*nrow(OutcomeMatrix),1))
for (i in 1:2){
outcome.update[4*i-1,1]<-outcome[4*i,1]
outcome.update[4*i,1]<-outcome[4*i-1,1]
}
df <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,v =(-outcome.update))
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome <- as.data.frame(matrix(t(OutcomeMatrix),nDemoClass*nrow(OutcomeMatrix),1))
df <- data.frame(Scenario=scenario,DemogrGroup=demogrGroup,v =(-outcome))
}
return(df=df)
}
plot.shiny.app <- function(countyID,dbID,yaxisID,demogrID){
if(yaxisID==1){
df.result <- DFforFigure(RawReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
ggtitle("Reduction in health burden")
}else if (yaxisID ==2) {
df.result <- DFforFigure(AgeStdReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
ggtitle("Age-std reduction in health burden")
}else{
#plot for physical activity data
AT_Pop_MeanTimebyRace <- read.csv("02_ActiveTransport/PopulationMeanATTimebyRace.csv")
AT_Pop_MeanTimebyIncome <- read.csv("02_ActiveTransport/PopulationMeanATTimebyIncome.csv")
OutcomeMatrix.walk <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(2,4,6,8)]
OutcomeMatrix.cycle <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(3,5,7,9)]
scenario.name <- rep(c('2012','2020','2036'),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),3)
#income group names
incomeGroup <- rep(incomeGroupNames,3)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
for (i in 1:2){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
}
}
write.csv.func <- function(HealthOutcome){
temp <- NULL
cutting.line <- matrix(" ",1,4)
for(i in (1:nRaceClass)){
temp.prop <- matrix(HealthOutcome[[i]]$prop.delta.Burden,1,nRaceClass)
temp.sum <- matrix(colSums(HealthOutcome[[i]]$delta.Burden),1,nRaceClass)
rownames(temp.prop) <- "proportion"
rownames(temp.sum) <- "total"
temp<-rbind(temp,HealthOutcome[[i]]$delta.Burden,temp.sum,temp.prop,cutting.line)
}
return(temp)
}
nAgeClass <- 8L
nRaceClass <- nIncomeClass <- nDemoClass <- 4L
k<-0.5
raceGroupNames <- c("1.NHW","2.NHB","3.NHO","4.HO")
incomeGroupNames <- c("Quant1","Quant2","Quant3","Quant4")
countyNames <- c("ELD","PLA","SAC","SUT","YOL","YUB")
Pop_Input_US <- read.csv("01_Population/01_Population_US_EA.csv")
gbd_Input_US <- read.csv("04_GBD/01_GBD_US_AllCause.csv")
RawReductionOutcome <- Reduction.output(c(1:6))
AgeStdReductionOutcome <- AgeStdHealthOutcome(c(1:6))
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 3, demogrID = 2)
plot.shiny.app <- function(countyID,dbID,yaxisID,demogrID){
if(yaxisID==1){
df.result <- DFforFigure(RawReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
ggtitle("Reduction in health burden")
}else if (yaxisID ==2) {
df.result <- DFforFigure(AgeStdReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
ggtitle("Age-std reduction in health burden")
}else{
#plot for physical activity data
AT_Pop_MeanTimebyRace <- read.csv("02_ActiveTransport/PopulationMeanATTimebyRace.csv")
AT_Pop_MeanTimebyIncome <- read.csv("02_ActiveTransport/PopulationMeanATTimebyIncome.csv")
OutcomeMatrix.walk <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(2,4,6,8)]
OutcomeMatrix.cycle <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(3,5,7,9)]
scenario.name <- rep(c('2012','2020','2036'),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),3)
#income group names
incomeGroup <- rep(incomeGroupNames,3)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
for (i in 1:2){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.cycle))
df.at <- rbind(df.walk,df.cycle)
}
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
}
}
write.csv.func <- function(HealthOutcome){
temp <- NULL
cutting.line <- matrix(" ",1,4)
for(i in (1:nRaceClass)){
temp.prop <- matrix(HealthOutcome[[i]]$prop.delta.Burden,1,nRaceClass)
temp.sum <- matrix(colSums(HealthOutcome[[i]]$delta.Burden),1,nRaceClass)
rownames(temp.prop) <- "proportion"
rownames(temp.sum) <- "total"
temp<-rbind(temp,HealthOutcome[[i]]$delta.Burden,temp.sum,temp.prop,cutting.line)
}
return(temp)
}
nAgeClass <- 8L
nRaceClass <- nIncomeClass <- nDemoClass <- 4L
k<-0.5
raceGroupNames <- c("1.NHW","2.NHB","3.NHO","4.HO")
incomeGroupNames <- c("Quant1","Quant2","Quant3","Quant4")
countyNames <- c("ELD","PLA","SAC","SUT","YOL","YUB")
Pop_Input_US <- read.csv("01_Population/01_Population_US_EA.csv")
gbd_Input_US <- read.csv("04_GBD/01_GBD_US_AllCause.csv")
RawReductionOutcome <- Reduction.output(c(1:6))
AgeStdReductionOutcome <- AgeStdHealthOutcome(c(1:6))
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 3, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 2, demogrID = 2)
DFforFigure <- function(OutcomeMatrix.list,demogrID,countyID){
#test
# demogrID = 1
# countyID = 1
# dbID = 1
# OutcomeMatrix.list <- RawReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))]
OutcomeMatrix.Scenario.2020 <- OutcomeMatrix.list[[1]]
OutcomeMatrix.Scenario.2036 <- OutcomeMatrix.list[[2]]
OutcomeMatrix <- rbind(OutcomeMatrix.Scenario.2020[countyID,],OutcomeMatrix.Scenario.2036[countyID,])
scenario.name <- rep(c('2020','2036'),each=4)
#county names
#county <- rep(rownames(OutcomeMatrix),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),2)
#income group names
incomeGroup <- rep(incomeGroupNames,2)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome <- outcome.update<-as.data.frame(matrix(t(OutcomeMatrix),nDemoClass*nrow(OutcomeMatrix),1))
for (i in 1:2){
outcome.update[4*i-1,1]<-outcome[4*i,1]
outcome.update[4*i,1]<-outcome[4*i-1,1]
}
df <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,v =(-outcome.update))
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome <- as.data.frame(matrix(t(OutcomeMatrix),nDemoClass*nrow(OutcomeMatrix),1))
df <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,v =(-outcome))
}
return(df=df)
}
plot.shiny.app <- function(countyID,dbID,yaxisID,demogrID){
if(yaxisID==1){
df.result <- DFforFigure(RawReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
ggtitle("Reduction in health burden")
}else if (yaxisID ==2) {
df.result <- DFforFigure(AgeStdReductionOutcome[c((dbID*2+demogrID-2),(dbID*2+demogrID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
ggtitle("Age-std reduction in health burden")
}else{
#plot for physical activity data
AT_Pop_MeanTimebyRace <- read.csv("02_ActiveTransport/PopulationMeanATTimebyRace.csv")
AT_Pop_MeanTimebyIncome <- read.csv("02_ActiveTransport/PopulationMeanATTimebyIncome.csv")
OutcomeMatrix.walk <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(2,4,6,8)]
OutcomeMatrix.cycle <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(3,5,7,9)]
scenario.name <- rep(c('2012','2020','2036'),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),3)
#income group names
incomeGroup <- rep(incomeGroupNames,3)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
for (i in 1:2){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.cycle))
df.at <- rbind(df.walk,df.cycle)
}
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
}
}
write.csv.func <- function(HealthOutcome){
temp <- NULL
cutting.line <- matrix(" ",1,4)
for(i in (1:nRaceClass)){
temp.prop <- matrix(HealthOutcome[[i]]$prop.delta.Burden,1,nRaceClass)
temp.sum <- matrix(colSums(HealthOutcome[[i]]$delta.Burden),1,nRaceClass)
rownames(temp.prop) <- "proportion"
rownames(temp.sum) <- "total"
temp<-rbind(temp,HealthOutcome[[i]]$delta.Burden,temp.sum,temp.prop,cutting.line)
}
return(temp)
}
nAgeClass <- 8L
nRaceClass <- nIncomeClass <- nDemoClass <- 4L
k<-0.5
raceGroupNames <- c("1.NHW","2.NHB","3.NHO","4.HO")
incomeGroupNames <- c("Quant1","Quant2","Quant3","Quant4")
countyNames <- c("ELD","PLA","SAC","SUT","YOL","YUB")
Pop_Input_US <- read.csv("01_Population/01_Population_US_EA.csv")
gbd_Input_US <- read.csv("04_GBD/01_GBD_US_AllCause.csv")
RawReductionOutcome <- Reduction.output(c(1:6))
AgeStdReductionOutcome <- AgeStdHealthOutcome(c(1:6))
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 2, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 2, yaxisID = 2, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 2, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 4,dbID = 2, yaxisID = 2, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 2, yaxisID = 3, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 3, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app <- function(countyID,dbID,yaxisID,demogrID){
if(yaxisID==1){
df.result <- DFforFigure(RawReductionOutcome[c((demogrID*2+dbID-2),(demogrID*2+dbID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
ggtitle("Reduction in health burden")
}else if (yaxisID ==2) {
df.result <- DFforFigure(AgeStdReductionOutcome[c((demogrID*2+dbID-2),(demogrID*2+dbID-1))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
ggtitle("Age-std reduction in health burden")
}else{
#plot for physical activity data
AT_Pop_MeanTimebyRace <- read.csv("02_ActiveTransport/PopulationMeanATTimebyRace.csv")
AT_Pop_MeanTimebyIncome <- read.csv("02_ActiveTransport/PopulationMeanATTimebyIncome.csv")
OutcomeMatrix.walk <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(2,4,6,8)]
OutcomeMatrix.cycle <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(3,5,7,9)]
scenario.name <- rep(c('2012','2020','2036'),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),3)
#income group names
incomeGroup <- rep(incomeGroupNames,3)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
for (i in 1:2){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.cycle))
df.at <- rbind(df.walk,df.cycle)
}
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
}
}
write.csv.func <- function(HealthOutcome){
temp <- NULL
cutting.line <- matrix(" ",1,4)
for(i in (1:nRaceClass)){
temp.prop <- matrix(HealthOutcome[[i]]$prop.delta.Burden,1,nRaceClass)
temp.sum <- matrix(colSums(HealthOutcome[[i]]$delta.Burden),1,nRaceClass)
rownames(temp.prop) <- "proportion"
rownames(temp.sum) <- "total"
temp<-rbind(temp,HealthOutcome[[i]]$delta.Burden,temp.sum,temp.prop,cutting.line)
}
return(temp)
}
nAgeClass <- 8L
nRaceClass <- nIncomeClass <- nDemoClass <- 4L
k<-0.5
raceGroupNames <- c("1.NHW","2.NHB","3.NHO","4.HO")
incomeGroupNames <- c("Quant1","Quant2","Quant3","Quant4")
countyNames <- c("ELD","PLA","SAC","SUT","YOL","YUB")
Pop_Input_US <- read.csv("01_Population/01_Population_US_EA.csv")
gbd_Input_US <- read.csv("04_GBD/01_GBD_US_AllCause.csv")
RawReductionOutcome <- Reduction.output(c(1:6))
AgeStdReductionOutcome <- AgeStdHealthOutcome(c(1:6))
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app <- function(countyID,dbID,yaxisID,demogrID){
if(yaxisID==1){
df.result <- DFforFigure(RawReductionOutcome[c((demogrID*4+dbID*2-5),(demogrID*2+dbID*2-4))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
ggtitle("Reduction in health burden")
}else if (yaxisID ==2) {
df.result <- DFforFigure(AgeStdReductionOutcome[c((demogrID*4+dbID*2-5),(demogrID*2+dbID*2-4))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
ggtitle("Age-std reduction in health burden")
}else{
#plot for physical activity data
AT_Pop_MeanTimebyRace <- read.csv("02_ActiveTransport/PopulationMeanATTimebyRace.csv")
AT_Pop_MeanTimebyIncome <- read.csv("02_ActiveTransport/PopulationMeanATTimebyIncome.csv")
OutcomeMatrix.walk <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(2,4,6,8)]
OutcomeMatrix.cycle <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(3,5,7,9)]
scenario.name <- rep(c('2012','2020','2036'),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),3)
#income group names
incomeGroup <- rep(incomeGroupNames,3)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
for (i in 1:2){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.cycle))
df.at <- rbind(df.walk,df.cycle)
}
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
}
}
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app <- function(countyID,dbID,yaxisID,demogrID){
if(yaxisID==1){
df.result <- DFforFigure(RawReductionOutcome[c((demogrID*4+dbID*2-5),(demogrID*4+dbID*2-4))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
ggtitle("Reduction in health burden")
}else if (yaxisID ==2) {
df.result <- DFforFigure(AgeStdReductionOutcome[c((demogrID*4+dbID*2-5),(demogrID*4+dbID*2-4))],demogrID,countyID)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
ggtitle("Age-std reduction in health burden")
}else{
#plot for physical activity data
AT_Pop_MeanTimebyRace <- read.csv("02_ActiveTransport/PopulationMeanATTimebyRace.csv")
AT_Pop_MeanTimebyIncome <- read.csv("02_ActiveTransport/PopulationMeanATTimebyIncome.csv")
OutcomeMatrix.walk <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(2,4,6,8)]
OutcomeMatrix.cycle <- AT_Pop_MeanTimebyRace[c(countyID,(countyID+7),(countyID+14)),c(3,5,7,9)]
scenario.name <- rep(c('2012','2020','2036'),each=4)
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),3)
#income group names
incomeGroup <- rep(incomeGroupNames,3)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
for (i in 1:2){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk),nDemoClass*nrow(OutcomeMatrix.walk),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle),nDemoClass*nrow(OutcomeMatrix.cycle),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.cycle))
df.at <- rbind(df.walk,df.cycle)
}
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
}
}
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app(countyID = 5,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app(countyID = 1,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app(countyID = 2,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app(countyID = 3,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 1, demogrID = 2)
plot.shiny.app(countyID = 1,dbID = 1, yaxisID = 1, demogrID = 1)
plot.shiny.app(countyID = 2,dbID = 1, yaxisID = 1, demogrID = 1)
plot.shiny.app(countyID = 3,dbID = 1, yaxisID = 1, demogrID = 1)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 1, demogrID = 1)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 1,dbID = 1, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 2,dbID = 1, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 2,dbID = 1, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 3,dbID = 1, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 4,dbID = 1, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 1,dbID = 1, yaxisID = 2, demogrID = 1)
plot.shiny.app(countyID = 1,dbID = 1, yaxisID = 3, demogrID = 1)
