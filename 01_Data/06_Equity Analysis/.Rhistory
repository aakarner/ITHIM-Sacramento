}else if (yaxisID==5){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 3,demogrID = demogrID,barID = 1)
}else{
message('wrong input')
}
}else if (outcomeID==2){
if (yaxisID%in%c(1:4)){
plot.shiny.app.injury(countyID = countyID,barID = 1,yaxisID = yaxisID)
}else{
message('wrong input')
}
}else if (outcomeID==3){
if (yaxisID==1){ #total deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+1*9-26):(1*18+1*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==2){ #total DALYs
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total DALYs')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==3){ # age.std deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==4){#age.std dalys
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total DALYs')
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('DALYs reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else{
message('wrong input')
}
}
}
integrated.shiny.app(countyID = 2, barID = 1,outcomeID = 1,demogrID = 1, yaxisID = 2)
RawReductionOutcome
demogrID = 1
dbID = 1
barID=1
ReductionOutcome <- RawReductionOutcome
df.region <- NULL
for (i in 1:6){# countyID
df.temp <- DFforFigure(ReductionOutcome[c((demogrID*18+dbID*9-26):(demogrID*18+dbID*9-18))],demogrID,i,barID)
df.region <- rbind(df.region,df.temp)
}
df.region
df.region$county <- rep(countyNames,each = 12)
df.region
DFforRegionWide <- function(ReductionOutcome){
# TEST
#demogrID = 1
#dbID = 1
#barID=1
#ReductionOutcome <- RawReductionOutcome
df.region <- NULL
for (i in 1:6){# countyID
df.temp <- DFforFigure(ReductionOutcome[c((demogrID*18+dbID*9-26):(demogrID*18+dbID*9-18))],demogrID,i,barID)
df.region <- rbind(df.region,df.temp)
}
df.region$county <- rep(countyNames,each = 12)
return(df.region)
}
df.result <- DFforRegionWide(RawReductionOutcome)
df.result
plot.title <- paste0('Region-Wide',': Reduction in Total ',dbNames[dbID])
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
+facet_grid(.~county,scales = "free")+ggtitle(plot.title)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
facet_grid(.~county,scales = "free")+ggtitle(plot.title)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
facet_grid(.~county,ncol=3,scales = "free")+ggtitle(plot.title)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
facet_wrap(.~county,ncol=3,scales = "free")+ggtitle(plot.title)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
facet_grid(.~county,scales = "free")+ggtitle(plot.title)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
facet_wrap(~county,scales = "free")+ggtitle(plot.title)
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
facet_wrap(~county)+ggtitle(plot.title)
df.result <- DFforRegionWide(AgeStdReductionOutcome)
plot.title <- paste0('Region-Wide',': Age-Standardized Reduction in Total ',dbNames[dbID])
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
facet_wrap(~county)+ggtitle(plot.title)
DFforPhysicalActivity <- function(barID,countyID,demogrID){
if (barID==1){
OutcomeMatrix.walk.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.2020[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyRace.2027[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.2036[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.2020[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyRace.2027[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.2036[c(countyID),c(3,5,7,9)])
OutcomeMatrix.walk.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.2020[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyIncome.2027[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.2036[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.2020[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyIncome.2027[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.2036[c(countyID),c(3,5,7,9)])
scenario.name <- rep(c('2012','2020','2027','2036'),each=4)
}else if (barID==2){
OutcomeMatrix.walk.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.S1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyRace.S2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.S3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.S1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyRace.S2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.S3[c(countyID),c(3,5,7,9)])
OutcomeMatrix.walk.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.S1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyIncome.S2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.S3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.S1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyIncome.S2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.S3[c(countyID),c(3,5,7,9)])
scenario.name <- rep(c('2012','S1','S2','S3'),each=4)
}else if (barID==3){
OutcomeMatrix.walk.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.C1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyRace.C2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.C3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.C1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyRace.C2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.C3[c(countyID),c(3,5,7,9)])
OutcomeMatrix.walk.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.C1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyIncome.C2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.C3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.C1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyIncome.C2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.C3[c(countyID),c(3,5,7,9)])
scenario.name <- rep(c('2012','C1','C2','C3'),each=4)
}
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),4)
#income group names
incomeGroup <- rep(incomeGroupNames,4)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk.byRace),nDemoClass*nrow(OutcomeMatrix.walk.byRace),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle.byRace),nDemoClass*nrow(OutcomeMatrix.cycle.byRace),1))
for (i in 1:3){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk.byIncome),nDemoClass*nrow(OutcomeMatrix.walk.byIncome),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle.byIncome),nDemoClass*nrow(OutcomeMatrix.cycle.byIncome),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.cycle))
df.at <- rbind(df.walk,df.cycle)
}
return(df.at)
}
DFforPhysicalActivity <- function(barID,countyID,demogrID){
if (barID==1){
OutcomeMatrix.walk.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.2020[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyRace.2027[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.2036[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.2020[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyRace.2027[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.2036[c(countyID),c(3,5,7,9)])
OutcomeMatrix.walk.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.2020[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyIncome.2027[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.2036[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.2020[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyIncome.2027[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.2036[c(countyID),c(3,5,7,9)])
scenario.name <- rep(c('2012','2020','2027','2036'),each=4)
}else if (barID==2){
OutcomeMatrix.walk.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.S1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyRace.S2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.S3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.S1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyRace.S2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.S3[c(countyID),c(3,5,7,9)])
OutcomeMatrix.walk.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.S1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyIncome.S2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.S3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.S1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyIncome.S2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.S3[c(countyID),c(3,5,7,9)])
scenario.name <- rep(c('2012','S1','S2','S3'),each=4)
}else if (barID==3){
OutcomeMatrix.walk.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.C1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyRace.C2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyRace.C3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byRace <- rbind(AT_Pop_MeanTimebyRace.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.C1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyRace.C2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyRace.C3[c(countyID),c(3,5,7,9)])
OutcomeMatrix.walk.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.C1[c(countyID),c(2,4,6,8)],
AT_Pop_MeanTimebyIncome.C2[c(countyID),c(2,4,6,8)],AT_Pop_MeanTimebyIncome.C3[c(countyID),c(2,4,6,8)])
OutcomeMatrix.cycle.byIncome <- rbind(AT_Pop_MeanTimebyIncome.baseline[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.C1[c(countyID),c(3,5,7,9)],
AT_Pop_MeanTimebyIncome.C2[c(countyID),c(3,5,7,9)],AT_Pop_MeanTimebyIncome.C3[c(countyID),c(3,5,7,9)])
scenario.name <- rep(c('2012','C1','C2','C3'),each=4)
}
#race group names
raceGroup <- rep(c("1.White",'2.Black','3.Hisp','4.Other'),4)
#income group names
incomeGroup <- rep(incomeGroupNames,4)
if (demogrID==1) {
demogrGroup = raceGroup
#shape the outcome as data.frame
outcome.walk <- outcome.update.walk<-as.data.frame(matrix(t(OutcomeMatrix.walk.byRace),nDemoClass*nrow(OutcomeMatrix.walk.byRace),1))
outcome.cycle <- outcome.update.cycle<-as.data.frame(matrix(t(OutcomeMatrix.cycle.byRace),nDemoClass*nrow(OutcomeMatrix.cycle.byRace),1))
for (i in 1:3){
outcome.update.walk[4*i-1,1]<-outcome.walk[4*i,1]
outcome.update.walk[4*i,1]<-outcome.walk[4*i-1,1]
outcome.update.cycle[4*i-1,1]<-outcome.cycle[4*i,1]
outcome.update.cycle[4*i,1]<-outcome.cycle[4*i-1,1]
}
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.update.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.update.cycle))
df.at <- rbind(df.walk,df.cycle)
}else{
demogrGroup = incomeGroup
#shape the outcome as data.frame
outcome.walk <- as.data.frame(matrix(t(OutcomeMatrix.walk.byIncome),nDemoClass*nrow(OutcomeMatrix.walk.byIncome),1))
outcome.cycle <- as.data.frame(matrix(t(OutcomeMatrix.cycle.byIncome),nDemoClass*nrow(OutcomeMatrix.cycle.byIncome),1))
df.walk <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'walk',v1 =(outcome.walk))
df.cycle <- data.frame(Scenario=scenario.name,DemogrGroup=demogrGroup,Mode = 'cycle',v1 =(outcome.cycle))
df.at <- rbind(df.walk,df.cycle)
}
return(df.at)
}
plot.shiny.app.PA <- function(countyID,dbID,typeID,demogrID,barID){
# #test
# demogrID = 1
# countyID = 1
# dbID = 1
# barID=1
# df.result <- df
if(typeID==1){
if (countyID%in%c(1:6)){
df.result <- DFforFigure(RawReductionOutcome[c((demogrID*18+dbID*9-26):(demogrID*18+dbID*9-18))],demogrID,countyID,barID)
plot.title <- paste0(countyNames[countyID],': Reduction in Total ',dbNames[dbID])
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
ggtitle(plot.title)
}else if(countyID==7){
df.result <- DFforRegionWide(RawReductionOutcome)
plot.title <- paste0('Region-Wide',': Reduction in Total ',dbNames[dbID])
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Health Burden Reduction')+
facet_wrap(~county)+ggtitle(plot.title)
}
}else if (typeID ==2) {
if (countyID%in%c(1:6)){
df.result <- DFforFigure(AgeStdReductionOutcome[c((demogrID*18+dbID*9-26):(demogrID*18+dbID*9-18))],demogrID,countyID,barID)
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total ',dbNames[dbID])
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
ggtitle(plot.title)
}else if(countyID==7){
df.result <- DFforRegionWide(AgeStdReductionOutcome)
plot.title <- paste0('Region-Wide',': Age-Standardized Reduction in Total ',dbNames[dbID])
ggplot(data = df.result, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Health Burden Reduction Rate (per 100,000 population)')+
facet_wrap(~county)+ggtitle(plot.title)
}
}else{
#plot for physical activity data
df.at <- DFforPhysicalActivity(barID,countyID,demogrID)
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
}
}
plot.shiny.app.PA(countyID = 1,dbID = 2, typeID = 3, demogrID = 1,barID = 1)
df.at <- DFforPhysicalActivity(barID,countyID,demogrID)
df.at
df.region <- NULL
for (i in 1:6){
df.temp <- DFforPhysicalActivity(barID,i,demogrID)
df.region <- rbind(df.region,df.temp)
}
df.region
df.region$county <- rep(countyNames,each = 36)
df.region$county <- rep(countyNames,each = 32)
df.region
df.at <- DFforPhysicalActivity(barID,countyID,demogrID)
plot.title <- paste0(countyNames[countyID],': Active Travel Time')
ggplot(data = df.at, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle(plot.title)
df.region <- NULL
for (i in 1:6){
df.temp <- DFforPhysicalActivity(barID,i,demogrID)
df.region <- rbind(df.region,df.temp)
}
df.region$county <- rep(countyNames,each = 32)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~.,scales = "free") +ggtitle("Physical Activity")
df.region
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Active Travel Time (mins per week per capita)')+
facet_grid(Mode~county,scales = "free") +ggtitle("Physical Activity")
countyID = 1
barID = 1
yaxisID = 1
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury
df.region <- NULL
for (i in 1:6){
df.temp <- DFforFigure.injury(barID = barID,i,typeID = 1)
df.region <- rbind(df.region,df.temp)
}
df.region
df.region <- NULL
for (i in 1:6){
df.temp <- DFforFigure.injury(barID = barID,i,typeID = 1)
df.region <- rbind(df.region,df.temp$df.fatality)
}
df.region
df.region$county <- rep(countyNames,each = 6)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_wrap(county)+ggtitle(plot.title)
df.region$county <- rep(countyNames,each = 6)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_wrap(county)+ggtitle(plot.title)
df.region$county <- rep(countyNames,each = 6)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_wrap(county)+ggtitle(plot.title)
df.region
df.region$county <- rep(countyNames,each = 6)
plot.title <- paste0('Region Wide: Reduction in Total Deaths')
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_wrap(county)+ggtitle(plot.title)
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_wrap(~county)+ggtitle(plot.title)
df.region <- NULL
for (i in 1:6){
df.temp <- DFforFigure.injury(barID = barID,i,typeID = 2)
df.region <- rbind(df.region,df.temp$df.fatality)
}
df.region$county <- rep(countyNames,each = 6)
plot.title <- paste0('Region Wide: Age-Standardized Reduction in Total Deaths')
ggplot(data = df.region, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death Reduction Rate (per 100,000 population)')+
facet_wrap(~county)+ggtitle(plot.title)
setwd("~/Documents/02_Work/14_GitHub/00_ITHIM/00_R scripts")
source('EquityAnalysis_ITHIM_PA.R')
setwd("~/Documents/02_Work/14_GitHub/00_ITHIM/00_R scripts")
source('EquityAnalysis_ITHIM_Injuries_TwoRaces.R')
integrated.shiny.app <- function(countyID,barID,outcomeID,demogrID,yaxisID){
if (outcomeID == 1){
if (yaxisID == 1){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 1,demogrID = demogrID,barID = 1)
}else if (yaxisID==2){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 2,demogrID = demogrID,barID = 1)
}else if (yaxisID==3){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 1,demogrID = demogrID,barID = 1)
}else if (yaxisID==4){
plot.shiny.app.PA(countyID = countyID,dbID = 2,typeID = 2,demogrID = demogrID,barID = 1)
}else if (yaxisID==5){
plot.shiny.app.PA(countyID = countyID,dbID = 1,typeID = 3,demogrID = demogrID,barID = 1)
}else{
message('wrong input')
}
}else if (outcomeID==2){
if (yaxisID%in%c(1:4)){
plot.shiny.app.injury(countyID = countyID,barID = 1,yaxisID = yaxisID)
}else{
message('wrong input')
}
}else if (outcomeID==3){
if (yaxisID==1){ #total deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+1*9-26):(1*18+1*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total Death Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==2){ #total DALYs
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(RawReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 1)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Reduction in Total DALYs')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Total DALYs Reduction')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==3){ # age.std deaths
#test
#countyID=1
#barID = 1
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.fatality
df.result.injury$type <- 'traffic injury'
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total Deaths')
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('Death reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else if (yaxisID==4){#age.std dalys
df.result.PA <- DFforFigure(AgeStdReductionOutcome[c((1*18+2*9-26):(1*18+2*9-18))],1,countyID,barID)
df.result.PA.aggr.white <- df.result.PA[c(1,5,9),]
for (i in 1:3) {
value[i] <- sum(df.result.PA[((i+1):(i+3)),3])
}
df.result.PA.aggr.other <- data.frame(Scenario=unique(df.result.PA[,1]),DemogrGroup=rep('2.Other',3),V1 =(value))
df.result.PA.aggr <- rbind(df.result.PA.aggr.white,df.result.PA.aggr.other)
df.result.PA.aggr <- df.result.PA.aggr[order(df.result.PA.aggr$Scenario),]
df.result.PA.aggr$type <- 'physical activity'
df.result.injury <- DFforFigure.injury(barID = barID,countyID = countyID,typeID = 2)
df.result.injury <- df.result.injury$df.serious
df.result.injury$type <- 'traffic injury'
plot.title <- paste0(countyNames[countyID],': Age-Standardized Reduction in Total DALYs')
df.result.twomodule <- rbind(df.result.PA.aggr,df.result.injury)
ggplot(data = df.result.twomodule, mapping = aes(x = factor(DemogrGroup), y = V1,fill = Scenario)) +
geom_bar(stat = 'identity',width = 0.5, position = position_dodge(0.5))+xlab('Demographic Group')+ylab('DALYs reduction rate (per 100,000 population)')+
facet_grid(.~type,scales = "free")+ggtitle(plot.title)
}else{
message('wrong input')
}
}
}
integrated.shiny.app(countyID = 2, barID = 1,outcomeID = 1,demogrID = 1, yaxisID = 2)
integrated.shiny.app(countyID = 7, barID = 1,outcomeID = 1,demogrID = 1, yaxisID = 2)
